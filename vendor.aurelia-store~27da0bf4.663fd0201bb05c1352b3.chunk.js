(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendor.aurelia-store~27da0bf4"],{

/***/ "aurelia-store":
/*!*************************************************************************!*\
  !*** ./node_modules/aurelia-store/dist/native-modules/aurelia-store.js ***!
  \*************************************************************************/
/*! exports provided: configure, PerformanceMeasurement, UnregisteredActionError, Store, dispatchify, executeSteps, jump, nextStateHistory, applyLimits, isStateHistory, DEFAULT_LOCAL_STORAGE_KEY, MiddlewarePlacement, logMiddleware, localStorageMiddleware, rehydrateFromLocalStorage, LogLevel, LoggerIndexed, getLogType, connectTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Promise) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"configure\", function() { return configure; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PerformanceMeasurement\", function() { return PerformanceMeasurement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UnregisteredActionError\", function() { return UnregisteredActionError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Store\", function() { return Store; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dispatchify\", function() { return dispatchify; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"executeSteps\", function() { return executeSteps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"jump\", function() { return jump; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nextStateHistory\", function() { return nextStateHistory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyLimits\", function() { return applyLimits; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isStateHistory\", function() { return isStateHistory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_LOCAL_STORAGE_KEY\", function() { return DEFAULT_LOCAL_STORAGE_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MiddlewarePlacement\", function() { return MiddlewarePlacement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logMiddleware\", function() { return logMiddleware; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"localStorageMiddleware\", function() { return localStorageMiddleware; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rehydrateFromLocalStorage\", function() { return rehydrateFromLocalStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogLevel\", function() { return LogLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LoggerIndexed\", function() { return LoggerIndexed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLogType\", function() { return getLogType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"connectTo\", function() { return connectTo; });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"DtyJ\");\n/* harmony import */ var aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aurelia-dependency-injection */ \"3U8n\");\n/* harmony import */ var aurelia_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aurelia-logging */ \"MP1E\");\n/* harmony import */ var aurelia_pal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! aurelia-pal */ \"70NS\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ \"ahDk\");\n\n\n\n\n\n\n/* istanbul ignore next */\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries#Polyfill\nif (!Object.entries) {\n    Object.entries = function (obj) {\n        var ownProps = Object.keys(obj), i = ownProps.length, resArray = new Array(i); // preallocate the Array\n        while (i--) {\n            resArray[i] = [ownProps[i], obj[ownProps[i]]];\n        }\n        return resArray;\n    };\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nfunction jump(state, n) {\n    if (!isStateHistory(state)) {\n        return state;\n    }\n    if (n > 0)\n        return jumpToFuture(state, n - 1);\n    if (n < 0)\n        return jumpToPast(state, state.past.length + n);\n    return state;\n}\nfunction jumpToFuture(state, index) {\n    if (index < 0 || index >= state.future.length) {\n        return state;\n    }\n    var past = state.past, future = state.future, present = state.present;\n    var newPast = past.concat([present], future.slice(0, index));\n    var newPresent = future[index];\n    var newFuture = future.slice(index + 1);\n    return { past: newPast, present: newPresent, future: newFuture };\n}\nfunction jumpToPast(state, index) {\n    if (index < 0 || index >= state.past.length) {\n        return state;\n    }\n    var past = state.past, future = state.future, present = state.present;\n    var newPast = past.slice(0, index);\n    var newFuture = past.slice(index + 1).concat([present], future);\n    var newPresent = past[index];\n    return { past: newPast, present: newPresent, future: newFuture };\n}\nfunction nextStateHistory(presentStateHistory, nextPresent) {\n    return Object.assign({}, presentStateHistory, {\n        past: presentStateHistory.past.concat([presentStateHistory.present]),\n        present: nextPresent,\n        future: []\n    });\n}\nfunction applyLimits(state, limit) {\n    if (isStateHistory(state)) {\n        if (state.past.length > limit) {\n            state.past = state.past.slice(state.past.length - limit);\n        }\n        if (state.future.length > limit) {\n            state.future = state.future.slice(0, limit);\n        }\n    }\n    return state;\n}\nfunction isStateHistory(history) {\n    return typeof history.present !== \"undefined\" &&\n        typeof history.future !== \"undefined\" &&\n        typeof history.past !== \"undefined\" &&\n        Array.isArray(history.future) &&\n        Array.isArray(history.past);\n}\n\nvar DEFAULT_LOCAL_STORAGE_KEY = \"aurelia-store-state\";\nvar MiddlewarePlacement;\n(function (MiddlewarePlacement) {\n    MiddlewarePlacement[\"Before\"] = \"before\";\n    MiddlewarePlacement[\"After\"] = \"after\";\n})(MiddlewarePlacement || (MiddlewarePlacement = {}));\nfunction logMiddleware(state, _, settings) {\n    var logType = settings && settings.logType && console.hasOwnProperty(settings.logType) ? settings.logType : \"log\";\n    console[logType](\"New state: \", state);\n}\nfunction localStorageMiddleware(state, _, settings) {\n    if (aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].global.localStorage) {\n        var key = settings && settings.key || DEFAULT_LOCAL_STORAGE_KEY;\n        aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].global.localStorage.setItem(key, JSON.stringify(state));\n    }\n}\nfunction rehydrateFromLocalStorage(state, key) {\n    if (!aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].global.localStorage) {\n        return state;\n    }\n    var storedState = aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].global.localStorage.getItem(key || DEFAULT_LOCAL_STORAGE_KEY);\n    if (!storedState) {\n        return state;\n    }\n    try {\n        return JSON.parse(storedState);\n    }\n    catch (e) { }\n    return state;\n}\n\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"trace\"] = \"trace\";\n    LogLevel[\"debug\"] = \"debug\";\n    LogLevel[\"info\"] = \"info\";\n    LogLevel[\"log\"] = \"log\";\n    LogLevel[\"warn\"] = \"warn\";\n    LogLevel[\"error\"] = \"error\";\n})(LogLevel || (LogLevel = {}));\nvar LoggerIndexed = /** @class */ (function (_super) {\n    __extends(LoggerIndexed, _super);\n    function LoggerIndexed() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return LoggerIndexed;\n}(aurelia_logging__WEBPACK_IMPORTED_MODULE_2__[\"Logger\"]));\nfunction getLogType(options, definition, defaultLevel) {\n    if (definition &&\n        options.logDefinitions &&\n        options.logDefinitions.hasOwnProperty(definition) &&\n        options.logDefinitions[definition] &&\n        Object.values(LogLevel).includes(options.logDefinitions[definition])) {\n        return options.logDefinitions[definition];\n    }\n    return defaultLevel;\n}\n\nvar PerformanceMeasurement;\n(function (PerformanceMeasurement) {\n    PerformanceMeasurement[\"StartEnd\"] = \"startEnd\";\n    PerformanceMeasurement[\"All\"] = \"all\";\n})(PerformanceMeasurement || (PerformanceMeasurement = {}));\nvar UnregisteredActionError = /** @class */ (function (_super) {\n    __extends(UnregisteredActionError, _super);\n    function UnregisteredActionError(reducer) {\n        return _super.call(this, \"Tried to dispatch an unregistered action \" + (reducer && (typeof reducer === \"string\" ? reducer : reducer.name))) || this;\n    }\n    return UnregisteredActionError;\n}(Error));\nvar Store = /** @class */ (function () {\n    function Store(initialState, options) {\n        this.initialState = initialState;\n        this.logger = Object(aurelia_logging__WEBPACK_IMPORTED_MODULE_2__[\"getLogger\"])(\"aurelia-store\");\n        this.devToolsAvailable = false;\n        this.actions = new Map();\n        this.middlewares = new Map();\n        this.dispatchQueue = [];\n        this.options = options || {};\n        var isUndoable = this.options.history && this.options.history.undoable === true;\n        this._state = new rxjs__WEBPACK_IMPORTED_MODULE_0__[\"BehaviorSubject\"](initialState);\n        this.state = this._state.asObservable();\n        if (!this.options.devToolsOptions || this.options.devToolsOptions.disable !== true) {\n            this.setupDevTools();\n        }\n        if (isUndoable) {\n            this.registerHistoryMethods();\n        }\n    }\n    Store.prototype.registerMiddleware = function (reducer, placement, settings) {\n        this.middlewares.set(reducer, { placement: placement, settings: settings });\n    };\n    Store.prototype.unregisterMiddleware = function (reducer) {\n        if (this.middlewares.has(reducer)) {\n            this.middlewares.delete(reducer);\n        }\n    };\n    Store.prototype.isMiddlewareRegistered = function (middleware) {\n        return this.middlewares.has(middleware);\n    };\n    Store.prototype.registerAction = function (name, reducer) {\n        if (reducer.length === 0) {\n            throw new Error(\"The reducer is expected to have one or more parameters, where the first will be the present state\");\n        }\n        this.actions.set(reducer, { type: name });\n    };\n    Store.prototype.unregisterAction = function (reducer) {\n        if (this.actions.has(reducer)) {\n            this.actions.delete(reducer);\n        }\n    };\n    Store.prototype.isActionRegistered = function (reducer) {\n        if (typeof reducer === \"string\") {\n            return Array.from(this.actions).find(function (action) { return action[1].type === reducer; }) !== undefined;\n        }\n        return this.actions.has(reducer);\n    };\n    Store.prototype.resetToState = function (state) {\n        this._state.next(state);\n    };\n    Store.prototype.dispatch = function (reducer) {\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        var action = this.lookupAction(reducer);\n        if (!action) {\n            return Promise.reject(new UnregisteredActionError(reducer));\n        }\n        return this.queueDispatch([{\n                reducer: action,\n                params: params\n            }]);\n    };\n    Store.prototype.pipe = function (reducer) {\n        var _this = this;\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        var pipeline = [];\n        var dispatchPipe = {\n            dispatch: function () { return _this.queueDispatch(pipeline); },\n            pipe: function (nextReducer) {\n                var nextParams = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    nextParams[_i - 1] = arguments[_i];\n                }\n                var action = _this.lookupAction(nextReducer);\n                if (!action) {\n                    throw new UnregisteredActionError(reducer);\n                }\n                pipeline.push({ reducer: action, params: nextParams });\n                return dispatchPipe;\n            }\n        };\n        return dispatchPipe.pipe.apply(dispatchPipe, [reducer].concat(params));\n    };\n    Store.prototype.lookupAction = function (reducer) {\n        if (typeof reducer === \"string\") {\n            var result = Array.from(this.actions).find(function (_a) {\n                var _ = _a[0], action = _a[1];\n                return action.type === reducer;\n            });\n            if (result) {\n                return result[0];\n            }\n        }\n        else if (this.actions.has(reducer)) {\n            return reducer;\n        }\n        return undefined;\n    };\n    Store.prototype.queueDispatch = function (actions) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.dispatchQueue.push({ actions: actions, resolve: resolve, reject: reject });\n            if (_this.dispatchQueue.length === 1) {\n                _this.handleQueue();\n            }\n        });\n    };\n    Store.prototype.handleQueue = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queueItem, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.dispatchQueue.length > 0)) return [3 /*break*/, 5];\n                        queueItem = this.dispatchQueue[0];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.internalDispatch(queueItem.actions)];\n                    case 2:\n                        _a.sent();\n                        queueItem.resolve();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        queueItem.reject(e_1);\n                        return [3 /*break*/, 4];\n                    case 4:\n                        this.dispatchQueue.shift();\n                        this.handleQueue();\n                        _a.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Store.prototype.internalDispatch = function (actions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var unregisteredAction, pipedActions, callingAction, beforeMiddleswaresResult, result, _i, pipedActions_1, action, resultingState, measures, marks, totalDuration;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        unregisteredAction = actions.find(function (a) { return !_this.actions.has(a.reducer); });\n                        if (unregisteredAction) {\n                            throw new UnregisteredActionError(unregisteredAction.reducer);\n                        }\n                        aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.mark(\"dispatch-start\");\n                        pipedActions = actions.map(function (a) { return ({\n                            type: _this.actions.get(a.reducer).type,\n                            params: a.params,\n                            reducer: a.reducer\n                        }); });\n                        callingAction = {\n                            name: pipedActions.map(function (a) { return a.type; }).join(\"->\"),\n                            params: pipedActions.reduce(function (p, a) { return p.concat(a.params); }, []),\n                            pipedActions: pipedActions.map(function (a) { return ({\n                                name: a.type,\n                                params: a.params\n                            }); })\n                        };\n                        if (this.options.logDispatchedActions) {\n                            this.logger[getLogType(this.options, \"dispatchedActions\", LogLevel.info)](\"Dispatching: \" + callingAction.name);\n                        }\n                        return [4 /*yield*/, this.executeMiddlewares(this._state.getValue(), MiddlewarePlacement.Before, callingAction)];\n                    case 1:\n                        beforeMiddleswaresResult = _a.sent();\n                        if (beforeMiddleswaresResult === false) {\n                            aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.clearMarks();\n                            aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.clearMeasures();\n                            return [2 /*return*/];\n                        }\n                        result = beforeMiddleswaresResult;\n                        _i = 0, pipedActions_1 = pipedActions;\n                        _a.label = 2;\n                    case 2:\n                        if (!(_i < pipedActions_1.length)) return [3 /*break*/, 5];\n                        action = pipedActions_1[_i];\n                        return [4 /*yield*/, action.reducer.apply(action, [result].concat(action.params))];\n                    case 3:\n                        result = _a.sent();\n                        if (result === false) {\n                            aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.clearMarks();\n                            aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.clearMeasures();\n                            return [2 /*return*/];\n                        }\n                        aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.mark(\"dispatch-after-reducer-\" + action.type);\n                        if (!result && typeof result !== \"object\") {\n                            throw new Error(\"The reducer has to return a new state\");\n                        }\n                        _a.label = 4;\n                    case 4:\n                        _i++;\n                        return [3 /*break*/, 2];\n                    case 5: return [4 /*yield*/, this.executeMiddlewares(result, MiddlewarePlacement.After, callingAction)];\n                    case 6:\n                        resultingState = _a.sent();\n                        if (resultingState === false) {\n                            aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.clearMarks();\n                            aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.clearMeasures();\n                            return [2 /*return*/];\n                        }\n                        if (isStateHistory(resultingState) &&\n                            this.options.history &&\n                            this.options.history.limit) {\n                            resultingState = applyLimits(resultingState, this.options.history.limit);\n                        }\n                        this._state.next(resultingState);\n                        aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.mark(\"dispatch-end\");\n                        if (this.options.measurePerformance === PerformanceMeasurement.StartEnd) {\n                            aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.measure(\"startEndDispatchDuration\", \"dispatch-start\", \"dispatch-end\");\n                            measures = aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.getEntriesByName(\"startEndDispatchDuration\");\n                            this.logger[getLogType(this.options, \"performanceLog\", LogLevel.info)](\"Total duration \" + measures[0].duration + \" of dispatched action \" + callingAction.name + \":\", measures);\n                        }\n                        else if (this.options.measurePerformance === PerformanceMeasurement.All) {\n                            marks = aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.getEntriesByType(\"mark\");\n                            totalDuration = marks[marks.length - 1].startTime - marks[0].startTime;\n                            this.logger[getLogType(this.options, \"performanceLog\", LogLevel.info)](\"Total duration \" + totalDuration + \" of dispatched action \" + callingAction.name + \":\", marks);\n                        }\n                        aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.clearMarks();\n                        aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.clearMeasures();\n                        this.updateDevToolsState({ type: callingAction.name, params: callingAction.params }, resultingState);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Store.prototype.executeMiddlewares = function (state, placement, action) {\n        var _this = this;\n        return Array.from(this.middlewares)\n            .filter(function (middleware) { return middleware[1].placement === placement; })\n            .reduce(function (prev, curr, _, _arr) { return __awaiter(_this, void 0, void 0, function () {\n            var result, _a, _b, _c, e_2;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _d.trys.push([0, 5, 7, 8]);\n                        _b = (_a = curr)[0];\n                        return [4 /*yield*/, prev];\n                    case 1: return [4 /*yield*/, _b.apply(_a, [_d.sent(), this._state.getValue(), curr[1].settings, action])];\n                    case 2:\n                        result = _d.sent();\n                        if (result === false) {\n                            _arr = [];\n                            return [2 /*return*/, false];\n                        }\n                        _c = result;\n                        if (_c) return [3 /*break*/, 4];\n                        return [4 /*yield*/, prev];\n                    case 3:\n                        _c = (_d.sent());\n                        _d.label = 4;\n                    case 4: return [2 /*return*/, _c];\n                    case 5:\n                        e_2 = _d.sent();\n                        if (this.options.propagateError) {\n                            _arr = [];\n                            throw e_2;\n                        }\n                        return [4 /*yield*/, prev];\n                    case 6: return [2 /*return*/, _d.sent()];\n                    case 7:\n                        aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].performance.mark(\"dispatch-\" + placement + \"-\" + curr[0].name);\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        }); }, state);\n    };\n    Store.prototype.setupDevTools = function () {\n        var _this = this;\n        if (aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].global.devToolsExtension) {\n            this.logger[getLogType(this.options, \"devToolsStatus\", LogLevel.debug)](\"DevTools are available\");\n            this.devToolsAvailable = true;\n            this.devTools = aurelia_pal__WEBPACK_IMPORTED_MODULE_3__[\"PLATFORM\"].global.__REDUX_DEVTOOLS_EXTENSION__.connect(this.options.devToolsOptions);\n            this.devTools.init(this.initialState);\n            this.devTools.subscribe(function (message) {\n                _this.logger[getLogType(_this.options, \"devToolsStatus\", LogLevel.debug)](\"DevTools sent change \" + message.type);\n                if (message.type === \"DISPATCH\") {\n                    _this._state.next(JSON.parse(message.state));\n                }\n            });\n        }\n    };\n    Store.prototype.updateDevToolsState = function (action, state) {\n        if (this.devToolsAvailable) {\n            this.devTools.send(action, state);\n        }\n    };\n    Store.prototype.registerHistoryMethods = function () {\n        this.registerAction(\"jump\", jump);\n    };\n    return Store;\n}());\nfunction dispatchify(action) {\n    var store = aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_1__[\"Container\"].instance.get(Store);\n    return function () {\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        return store.dispatch.apply(store, [action].concat(params));\n    };\n}\n\nfunction executeSteps(store, shouldLogResults) {\n    var steps = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        steps[_i - 2] = arguments[_i];\n    }\n    return __awaiter(this, void 0, void 0, function () {\n        var logStep, tryStep, lastStep;\n        return __generator(this, function (_a) {\n            logStep = function (step, stepIdx) { return function (res) {\n                if (shouldLogResults) {\n                    console.group(\"Step \" + stepIdx);\n                    console.log(res);\n                    console.groupEnd();\n                }\n                step(res);\n            }; };\n            tryStep = function (step, reject) {\n                return function (res) {\n                    try {\n                        step(res);\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                };\n            };\n            lastStep = function (step, resolve) {\n                return function (res) {\n                    step(res);\n                    resolve();\n                };\n            };\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var currentStep = 0;\n                    steps.slice(0, -1).forEach(function (step) {\n                        store.state.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"skip\"])(currentStep), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"take\"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"delay\"])(0)).subscribe(tryStep(logStep(step, currentStep), reject));\n                        currentStep++;\n                    });\n                    store.state.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"skip\"])(currentStep), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"take\"])(1)).subscribe(lastStep(tryStep(logStep(steps[steps.length - 1], currentStep), reject), resolve));\n                })];\n        });\n    });\n}\n\nvar defaultSelector = function (store) { return store.state; };\nfunction connectTo(settings) {\n    var $store;\n    // const store = Container.instance.get(Store) as Store<T>;\n    var _settings = __assign({ selector: typeof settings === \"function\" ? settings : defaultSelector }, settings);\n    function getSource(selector) {\n        // if for some reason getSource is invoked before setup (bind lifecycle, typically)\n        // then we have no choice but to get the store instance from global container instance\n        // otherwise, assume that $store variable in the closure would be already assigned the right\n        // value from created callback\n        // Could also be in situation where it doesn't come from custom element, or some exotic setups/scenarios\n        var store = $store || ($store = aurelia_dependency_injection__WEBPACK_IMPORTED_MODULE_1__[\"Container\"].instance.get(Store));\n        var source = selector(store);\n        if (source instanceof rxjs__WEBPACK_IMPORTED_MODULE_0__[\"Observable\"]) {\n            return source;\n        }\n        return store.state;\n    }\n    function createSelectors() {\n        var _a;\n        var isSelectorObj = typeof _settings.selector === \"object\";\n        var fallbackSelector = (_a = {},\n            _a[_settings.target || \"state\"] = _settings.selector || defaultSelector,\n            _a);\n        return Object.entries(__assign({}, (isSelectorObj ? _settings.selector : fallbackSelector))).map(function (_a) {\n            var target = _a[0], selector = _a[1];\n            var _b;\n            return ({\n                targets: _settings.target && isSelectorObj ? [_settings.target, target] : [target],\n                selector: selector,\n                // numbers are the starting index to slice all the change handling args, \n                // which are prop name, new state and old state\n                changeHandlers: (_b = {},\n                    _b[_settings.onChanged || \"\"] = 1,\n                    _b[(_settings.target || target) + \"Changed\"] = _settings.target ? 0 : 1,\n                    _b[\"propertyChanged\"] = 0,\n                    _b)\n            });\n        });\n    }\n    return function (target) {\n        var originalCreated = target.prototype.created;\n        var originalSetup = typeof settings === \"object\" && settings.setup\n            ? target.prototype[settings.setup]\n            : target.prototype.bind;\n        var originalTeardown = typeof settings === \"object\" && settings.teardown\n            ? target.prototype[settings.teardown]\n            : target.prototype.unbind;\n        // only override if prototype callback is a function\n        if (typeof originalCreated === \"function\" || originalCreated === undefined) {\n            target.prototype.created = function created(_, view) {\n                // here we relies on the fact that the class Store\n                // has not been registered somewhere in one of child containers, instead of root container\n                // if there is any issue with this approach, needs to walk all the way up to resolve from root\n                // typically like invoking from global Container.instance\n                $store = view.container.get(Store);\n                if (originalCreated !== undefined) {\n                    return originalCreated.call(this, _, view);\n                }\n            };\n        }\n        target.prototype[typeof settings === \"object\" && settings.setup ? settings.setup : \"bind\"] = function () {\n            var _this = this;\n            if (typeof settings == \"object\" &&\n                typeof settings.onChanged === \"string\" &&\n                !(settings.onChanged in this)) {\n                throw new Error(\"Provided onChanged handler does not exist on target VM\");\n            }\n            this._stateSubscriptions = createSelectors().map(function (s) { return getSource(s.selector).subscribe(function (state) {\n                var lastTargetIdx = s.targets.length - 1;\n                var oldState = s.targets.reduce(function (accu, curr) {\n                    if (accu === void 0) { accu = {}; }\n                    return accu[curr];\n                }, _this);\n                Object.entries(s.changeHandlers).forEach(function (_a) {\n                    var handlerName = _a[0], args = _a[1];\n                    if (handlerName in _this) {\n                        _this[handlerName].apply(_this, [s.targets[lastTargetIdx], state, oldState].slice(args, 3));\n                    }\n                });\n                s.targets.reduce(function (accu, curr, idx) {\n                    accu[curr] = idx === lastTargetIdx ? state : accu[curr] || {};\n                    return accu[curr];\n                }, _this);\n            }); });\n            if (originalSetup) {\n                return originalSetup.apply(this, arguments);\n            }\n        };\n        target.prototype[typeof settings === \"object\" && settings.teardown ? settings.teardown : \"unbind\"] = function () {\n            if (this._stateSubscriptions && Array.isArray(this._stateSubscriptions)) {\n                this._stateSubscriptions.forEach(function (sub) {\n                    if (sub instanceof rxjs__WEBPACK_IMPORTED_MODULE_0__[\"Subscription\"] && sub.closed === false) {\n                        sub.unsubscribe();\n                    }\n                });\n            }\n            if (originalTeardown) {\n                return originalTeardown.apply(this, arguments);\n            }\n        };\n    };\n}\n\nfunction configure(aurelia, options) {\n    if (!options || !options.initialState) {\n        throw new Error(\"initialState must be provided via options\");\n    }\n    var initState = options.initialState;\n    if (options && options.history && options.history.undoable && !isStateHistory(options.initialState)) {\n        initState = { past: [], present: options.initialState, future: [] };\n    }\n    delete options.initialState;\n    aurelia.container\n        .registerInstance(Store, new Store(initState, options));\n}\n\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! promise-polyfill */ \"B/eG\")[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///aurelia-store\n");

/***/ })

}]);